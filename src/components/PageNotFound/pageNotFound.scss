@import "../../utils/variables";

.pageNotFoundContainer {
  margin: 50px auto;
  min-width: 300px;
  max-width: 800px;
  position: relative;
  font-family: 'Press Start 2P', cursive;
}

.pageNotFoundTitleContainer {
  color: $tertiary-color;
  position: relative;
  display: flex;
  flex-direction: column;

  div {
    display: flex;
    width: 100%;
    justify-content: center;
    position: absolute;
    bottom: 0;

    font-size: 4rem;
    letter-spacing: 15px;
  }
}

.cell {
  width: 100%;
  height: 100%;
  z-index: 2;
}

@for $i from 0 to 15 {
  .cell:nth-child(15n + #{$i + 1}):hover ~ .content {
    --positionX: #{$i};
  }
  .cell:nth-child(n + #{15 * $i + 1}):nth-child(-n + #{15 * ($i + 1)}):hover ~ .content {
    --positionY: #{$i};
  }
}

.content {
  --positionX: 7;
  --positionY: 7;

  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.css {
  position: absolute;
  top: 35%; left: 50%;
  animation: color 3s infinite linear;
  text-shadow: 0 0 10px #000a;
  transition: all 0.5s;

  @media screen and (min-width: $breakpoint-mobile) {
    @for $i from 0 to 10 {
      &:nth-child(#{$i + 1}) {
        font-size: #{60 + $i * 10}px;
        animation-delay: #{$i * -0.3}s;
        opacity: #{0.1 + $i * 0.1};
        transform:
                translateX(calc(-48% - (var(--positionX) - 7) * #{(7 - $i) * 3px}))
                translateY(calc(-50% - (var(--positionY) - 7) * #{(7 - $i) * 3px}))
                rotateX(calc(0deg - (var(--positionY) - 7) * 5deg))
                rotateY(calc((var(--positionX) - 7) * 5deg));
      }
    }
  }
  @media screen and (max-width: $breakpoint-mobile) {
    @for $i from 0 to 10 {
      &:nth-child(#{$i + 1}) {
        font-size: #{$i * 5}px;
        animation-delay: #{$i * -0.3}s;
        opacity: #{0.1 + $i * 0.1};
        transform: translateX(calc(-48% - (var(--positionX) - 7) * #{(7 - $i) * 3px})) translateY(calc(-50% - (var(--positionY) - 7) * #{(7 - $i) * 3px})) rotateX(calc(0deg - (var(--positionY) - 7) * 5deg)) rotateY(calc((var(--positionX) - 7) * 5deg));
      }
    }
  }
  @keyframes color {
    @for $c from 0 through 1 {
      #{$c * 10%} { color: hsl(240 * $c, 100%, 50%); }
    }
  }
}

.deconstructed {
  position: absolute;
  bottom: 0;
  margin: auto;
  height: 0.71em;
  color: transparent;
  letter-spacing: -0.02em;
  @media screen and (min-width: $breakpoint-mobile) {
    font-size: 8rem;
  }
  @media screen and (max-width: $breakpoint-mobile) {
    font-size: 6rem;
  }
}

.deconstructed > div {
  position: absolute;
  width: 100%;
  left: 55%;
  bottom: 0;
  pointer-events: none;

  color: red;
  -webkit-text-fill-color: $tertiary-color;
  -webkit-text-stroke-width: 2px;
  -webkit-text-stroke-color: red;

  @media screen and (min-width: $breakpoint-mobile) {
    left: 55%;
  }
  @media screen and (max-width: $breakpoint-mobile) {
    left: 20%;
  }
}

.deconstructed > div:nth-child(1) {
  mask-image: linear-gradient(black 25%, transparent 25%);
  animation: deconstructed1 1.3s forwards;
}

.deconstructed > div:nth-child(2) {
  mask-image: linear-gradient(transparent 25%, black 25%, black 50%, transparent 50%);
  animation: deconstructed2 1.3s forwards;
}

.deconstructed > div:nth-child(3) {
  mask-image: linear-gradient(transparent 50%, black 50%, black 75%, transparent 75%);
  animation: deconstructed3 1.3s forwards;
}

.deconstructed > div:nth-child(4) {
  mask-image: linear-gradient(transparent 75%, black 75%);
  animation: deconstructed4 1.3s forwards;
}

@keyframes deconstructed1 {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0%);
  }
}

@keyframes deconstructed2 {
  0% {
    transform: translateX(100%);
  }
  94% {
    transform: translateX(0.5%);
  }

}

@keyframes deconstructed3 {
  0% {
    transform: translateX(100%);
  }
  88% {
    transform: translateX(0%);
  }
}

@keyframes deconstructed4 {
  0% {
    transform: translateX(100%);
  }
  82% {
    transform: translateX(0%);
  }
}