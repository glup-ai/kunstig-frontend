@import "../../utils/variables";

.pageNotFoundContainer {
  font-family: 'Press Start 2P', cursive;
  color: $tertiary-color;
  position: relative;
  display: flex;
  flex-direction: column;
  margin: 15px auto;
  min-width: 400px;
  max-width: 800px;
  div {
    display: flex;
    width: 100%;
    justify-content: center;
    position: absolute;
    bottom: 0;

    font-size: 4rem;
    letter-spacing: 15px;

    :nth-child(1) {}
    :nth-child(2) {

    }
    :nth-child(3) {}

  }
}

.cell {
  width: 100%;
  height: 100%;
  z-index: 2;
}

@for $i from 0 to 15 {
  .cell:nth-child(15n + #{$i + 1}):hover ~ .content {
    --positionX: #{$i};
  }
  .cell:nth-child(n + #{15 * $i + 1}):nth-child(-n + #{15 * ($i + 1)}):hover ~ .content {
    --positionY: #{$i};
  }
}

.content {
  --positionX: 7;
  --positionY: 7;

  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.css {
  position: absolute;
  top: 35%; left: 50%;
  animation: color 3s infinite linear;
  text-shadow: 0 0 10px #000a;
  transition: all 0.5s;

  @for $i from 0 to 10 {
    &:nth-child(#{$i + 1}) {
      font-size: #{60 + $i * 10}px;
      animation-delay: #{$i * -0.3}s;
      opacity: #{0.1 + $i * 0.1};
      transform:
              translateX(calc(-48% - (var(--positionX) - 7) * #{(7 - $i) * 3px}))
              translateY(calc(-50% - (var(--positionY) - 7) * #{(7 - $i) * 3px}))
              rotateX(calc(0deg - (var(--positionY) - 7) * 5deg))
              rotateY(calc((var(--positionX) - 7) * 5deg));
    }
  }

  @keyframes color {
    @for $c from 0 through 1 {
      #{$c * 10%} { color: hsl(240 * $c, 100%, 50%); }
    }
  }
}